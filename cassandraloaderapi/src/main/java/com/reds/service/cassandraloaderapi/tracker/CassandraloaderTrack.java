package com.reds.service.cassandraloaderapi.tracker;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import com.reds.library.redscommons.tracker.PlatformTrack;
import com.reds.library.redscommons.tracker.TrackerConfig;

/**
 * <b>Purpose:</b> Tracker class to track what is happening inside this Cassandraloader
 * 
 * @author <b>Algols Builder</b>
 *
 *      This code is generated by Reds
 */
public class CassandraloaderTrack extends PlatformTrack {

	/**
	 * To hold instance of Logger
	 */
	public static Logger me = LogManager.getLogger(CassandraloaderTrack.class.getName());

	/**
	 * To init tracker with default configuration.
	 * 
	 * @param name
	 */
	public static void init(String name) {
		CassandraloaderTrack.me = PlatformTrack.getTracker(new TrackerConfig(name));
	}

	/**
	 * To init tracker with other tracker impl
	 * 
	 * @param me
	 */
	public static void init(Logger me) {
		CassandraloaderTrack.me = me;
	}

	/**
	 * To init tracker with custom configuration
	 * 
	 * @param trackerConfig
	 */
	public static void init(TrackerConfig trackerConfig) {
		CassandraloaderTrack.me = PlatformTrack.getTracker(trackerConfig);
	}

}