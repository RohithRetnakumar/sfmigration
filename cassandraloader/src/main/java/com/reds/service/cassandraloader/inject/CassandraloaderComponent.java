package com.reds.service.cassandraloader.inject;

import javax.inject.Singleton;
import com.reds.service.cassandraloader.CassandraManager;
import com.reds.service.cassandraloader.FileAdaptorManager;
import com.reds.service.cassandraloader.config.AssertMainDetailsConfig;
import com.reds.service.cassandraloader.config.AssetTransactionStatusHistoryConfig;
import com.reds.service.cassandraloader.config.CassandraloaderConfig;
import com.reds.service.cassandraloader.config.CassandraloaderTrackerConfig;
import com.reds.service.cassandraloader.config.ProductMasterConfig;
import com.reds.service.cassandraloader.config.TestConfig;
import com.reds.service.cassandraloaderapi.info.CassandraloaderInfo;
import com.reds.service.datamanagementapi.DataManagement;
import com.reds.service.eventmanagementapi.EventManagement;
import com.reds.service.fileadapterapi.FileAdapter;
import dagger.Component;
import com.reds.service.cassandraloader.config.CsvWriterConfig;
import com.reds.service.cassandraloader.config.MaterialMasterConfig;

/**
 * <b>Purpose:</b> This is the injector class used in Cassandraloader It assigns
 * references in all Modules
 *
 * @author <b>Algols Builder</b>
 *
 *         This code is generated by Reds on 30/07/2020 02:11:30
 */
@Singleton
@Component(modules = { CassandraloaderModule.class, CassandraloaderConfigManagerGen.class, CassandraloaderServiceProviderGen.class })
public interface CassandraloaderComponent {

    public CassandraloaderInfo takeCassandraloaderInfo();

    /**
     *  <b>Auto Generated </b><br>
     *  <b>Purpose: </b> To provide CassandraloaderConfig
     */
    public CassandraloaderConfig takeCassandraloaderConfig();

    /**
     *  <b>Auto Generated </b><br>
     *  <b>Purpose: </b> To provide CassandraloaderTrackerConfig
     */
    public CassandraloaderTrackerConfig takeCassandraloaderTrackerConfig();

    /**
     *  <b>Auto Generated </b><br>
     *  </b><b>Purpose: </b> To access DataManagement1.0
     */
    public DataManagement accessDataManagement();

    /**
     *  <b>Auto Generated </b><br>
     *  </b><b>Purpose: </b> To access FileAdapter1.0
     */
    public FileAdapter accessFileAdapter();

    /**
     *  <b>Auto Generated </b><br>
     *  </b><b>Purpose: </b> To access EventManagement1.0
     */
    public EventManagement accessEventManagement();

    /**
     *  <b>Auto Generated </b><br>
     *  </b><b>Purpose: </b> To take CassandraManager
     */
    public CassandraManager takeCassandraManager();

    /**
     *  <b>Auto Generated </b><br>
     *  <b>Purpose: </b> To provide TestConfig
     */
    public TestConfig takeTestConfig();

    /**
     * <b>Auto Generated </b><br>
     * <b>Purpose: </b> To provide AssertMainDetailsConfig
     */
    public AssertMainDetailsConfig takeAssertMainDetailsConfig();

    /**
     * <b>Auto Generated </b><br>
     * <b>Purpose: </b> To provide AssetTransactionStatusHistoryConfig
     */
    public AssetTransactionStatusHistoryConfig takeAssetTransactionStatusHistoryConfig();

    /**
     * <b>Auto Generated </b><br>
     * <b>Purpose: </b> To provide ProductMasterConfig
     */
    public ProductMasterConfig takeProductMasterConfig();

    /**
     * <b>Auto Generated </b><br>
     * </b><b>Purpose: </b> To take FileAdaptorManager
     */
    public FileAdaptorManager takeFileAdaptorManager();

    /**
     * <b>Auto Generated </b><br>
     * <b>Purpose: </b> To provide CsvWriterConfig
     */
    public CsvWriterConfig takeCsvWriterConfig();

    /**
     * <b>Auto Generated </b><br>
     * <b>Purpose: </b> To provide MaterialMasterConfig
     */
    public MaterialMasterConfig takeMaterialMasterConfig();
}
